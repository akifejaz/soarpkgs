#!/SBUILD ver @v1.0.0
#SELF: https://raw.githubusercontent.com/pkgforge/soarpkgs/refs/heads/main/packages/binutils/appimage.ppkg.stable.yaml
_disabled: false

pkg: "binutils"
pkg_id: "ppkg.bundle.binutils.stable"
pkg_type: "appimage"
category:
  - "ConsoleOnly"
  - "Utility"
description:
  _default: "Tools for manipulating binaries (linker, assembler, etc.) [alias=bintools]"
  addr2line: "Converts addresses into filenames and line numbers [binutils]"
  ar: "A utility for creating, modifying and extracting from archives [binutils]"
  as: "The GNU Assembler [binutils]"
  c++filt: "Filter to demangle encoded C++ symbols [binutils]"
  coffdump: "COFF-specific dumper for objdump [binutils]"
  dllwrap: "Generate PE style dll [binutils]"
  dwp: "The DWARF packaging utility [binutils]"
  elfedit: "Allows alteration of ELF format files [binutils]"
  gprof: "Displays profiling information [binutils]"
  ld: "The GNU linker [binutils]"
  ld.bfd: "The GNU linker with BFD libraries [binutils]"
  ld.gold: "A new, faster, ELF only linker [binutils]"
  nm: "Lists symbols from object files [binutils]"
  objcopy: "Copies and translates object files [binutils]"
  objdump: "Displays information from object files [binutils]"
  ranlib: "Generates an index to the contents of an archive [binutils]"
  readelf: "Displays information from any ELF format object file [binutils]"
  size: "Lists the section sizes of an object or archive file [binutils]"
  srconv: "Sysroff conversion program [binutils]"
  strings: "Lists printable strings from files [binutils]"
  strip: "Discards symbols [binutils]"
  sysdump: "Sysroff object format dumper [binutils]"
  windmc: "Generate Windows message resources [binutils]"
  windres: "Manipulate Windows resources [binutils]"
homepage:
  - "https://www.gnu.org/software/binutils/"
maintainer:
  - "Azathothas (https://github.com/Azathothas)"
note:
  - "[DO NOT RUN] (Meant for pkgforge CI Only)"
  - "Built Using ppkg. Check/Report @ https://github.com/leleliu008/ppkg-formula-repository-official-core"
  - "This is the multilib version & works for many targets"
  - "[PORTABLE] (Works on AnyLinux)"
  - "[NO_DESKTOP_INTEGRATION] (Does not need desktop integration)"
provides:
 - "binutils==addr2line"
 - "binutils==ar"
 - "binutils==as"
 - "binutils==c++filt"
 - "binutils==coffdump"
 - "binutils==dlltool"
 - "binutils==dllwrap"
 - "binutils==dwp"
 - "binutils==elfedit"
 - "binutils==gprof"
 - "binutils==ld"
 - "binutils==ld.bfd"
 - "binutils==ld.gold"
 - "binutils==nm"
 - "binutils==objcopy"
 - "binutils==objdump"
 - "binutils==ranlib"
 - "binutils==readelf"
 - "binutils==size"
 - "binutils==srconv"
 - "binutils==strings"
 - "binutils==strip"
 - "binutils==sysdump"
 - "binutils==windmc"
 - "binutils==windres"
repology:
  - "binutils"
src_url:
  - "https://sourceware.org/git/gitweb.cgi?p=binutils-gdb.git"
tag:
  - "Utility"
x_exec:
  host:
    - "aarch64-Linux"
    - "x86_64-Linux"
  shell: "bash"
  pkgver: |
    curl -qfsSL "https://meta.pkgforge.dev/misc/PPKG.json" | jq -r '.[] | select(.pkg == "binutils") | .version' | tr -d '"'\''[:space:]'
  run: |
    #Build
     mkdir -pv "${SBUILD_TMPDIR}/tmp" && docker run --privileged --net="host" --name "ubuntu-builder" --pull="always" \
     -e "PKG=${PKG}" -e "PKG_ID=${PKG_ID}" -e "PKG_TYPE=${PKG_TYPE}" -e "PKG_VER=${PKG_VER}" \
     -e "PKGVER=${PKGVER}" -e "SBUILD_PKG=${SBUILD_PKG}" -e "SBUILD_PKGVER=${SBUILD_PKGVER}" \
     --volume "${SBUILD_TMPDIR}/tmp:/tmp:rw,z" --workdir "/tmp" \
     "docker.io/ubuntu:latest" \
      bash -l -c '
      #Setup ENV
       set -x ; mkdir -pv "/tmp" ; chown -R "$(whoami):$(whoami)" "/tmp" ; chmod -v "1777" "/tmp"
       mkdir -p "/build-bins" && pushd "$(mktemp -d)" &>/dev/null
       apt update -y -qq
       apt install binutils coreutils curl dos2unix file g++ git jq moreutils rsync util-linux wget xz-utils -y -qq
      #ppkg
       curl -qfsSL "https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg" -o "/usr/local/bin/ppkg"
       chmod -v "a+x" "/usr/local/bin/ppkg"
       ppkg setup
       ppkg update
       [ -d "${HOME}/.ppkg/repos.d/official-core/" ] && git -C "${HOME}/.ppkg/repos.d/official-core/" reset --hard
      #Build: https://github.com/leleliu008/ppkg-formula-repository-official-core/raw/master/formula/binutils.yml
       ppkg install "binutils" --profile="release" -j "$(($(nproc)+1))"
       ppkg bundle "binutils" "${PKG}.AppImage" --portable
       ppkg tree "binutils" --dirsfirst -L 5
      #Copy
       find "." -maxdepth 1 -type f -iname "*appimage*" -exec realpath "{}" \; | head -n 1 | xargs -I "{}" cp -fv "{}" "/build-bins/${PKG}"
      #info
       file "/build-bins/"* && du -sh "/build-bins/"*
      '
    #Copy & Meta
     docker cp "ubuntu-builder:/build-bins/." "${SBUILD_TMPDIR}/"
     [ -s "${SBUILD_TMPDIR}/LICENSE" ] && cp -fv "${SBUILD_TMPDIR}/LICENSE" "${SBUILD_OUTDIR}/LICENSE"
     find "${SBUILD_TMPDIR}" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|inode/symlink|text/x-perl|text/.*script" | cut -d":" -f1 | xargs realpath --no-symlinks | xargs -I "{}" rsync -achvL "{}" "${SBUILD_OUTDIR}"