#!/SBUILD ver @v1.0.0
#SELF: https://raw.githubusercontent.com/pkgforge/soarpkgs/refs/heads/main/packages/kdeutils/runimage.cachyos.stable.yaml
_disabled: false

pkg: "kdeutils"
pkg_id: "runimage.cachyos.kdeutils"
pkg_type: "runimage"
category:
  - "Utility"
description: 
  _default: "Collection of utilities for KDE"
  ark: "Archiving Tool [kdeutils]"
  filelight: "View disk usage information [kdeutils]"
  francis: "Track your time [kdeutils]"
  isoimagewriter: "Program to write hybrid ISO files onto USB disks [kdeutils]"
  kalk: "A powerful cross-platform calculator application built with the Kirigami framework [kdeutils]"
  kalm: "Kalm can teach you different breathing techniques [kdeutils]"
  kate: "Advanced text editor [kdeutils]"
  kbackup: "A program that lets you back up any directories or files [kdeutils]"
  kcalc: "Scientific Calculator [kdeutils]"
  kcharselect: "Character Selector [kdeutils]"
  kclock: "Clock app for Plasma Mobile [kdeutils]"
  kdebugsettings: "An application to enable/disable qCDebug [kdeutils]"
  kdeutils: "Collection of utilities for KDE"
  kdf: "View Disk Usage [kdeutils]"
  kdialog: "A utility for displaying dialog boxes from shell scripts [kdeutils]"
  keditbookmarks: "Bookmark Organizer and Editor [kdeutils]"
  keysmith: "OTP client for Plasma Mobile and Desktop [kdeutils]"
  kfind: "Find Files/Folders [kdeutils]"
  kgpg: "A GnuPG frontend [kdeutils]"
  kongress: "Companion application for conferences [kdeutils]"
  konsole: "KDE terminal emulator [kdeutils]"
  krecorder: "Audio recorder for Plasma Mobile and other platforms [kdeutils]"
  kteatime: "A handy timer for steeping tea [kdeutils]"
  ktimer: "Countdown Launcher [kdeutils]"
  ktrip: "Public Transport Assistance for Mobile Devices [kdeutils]"
  kwalletmanager: "Wallet management tool [kdeutils]"
  kweather: "Weather application for Plasma Mobile [kdeutils]"
  kwrite: "Collection of utilities for KDE [kdeutils]"
  markdownpart: "KPart for rendering Markdown content [kdeutils]"
  skanpage: "Utility to scan images and multi-page documents [kdeutils]"
  sweeper: "System Cleaner [kdeutils]"
  telly-skout: "Convergent TV guide based on Kirigami [kdeutils]"
  yakuake: "A drop-down terminal emulator based on KDE konsole technology [kdeutils]"
homepage:
  - "https://www.kde.org/applications/utilities"
icon:
  url: "https://raw.githubusercontent.com/pkgforge/soarpkgs/refs/heads/main/packages/kdeutils/assets/default.png"  
license:
  - "GPL-2.0"
maintainer:
  - "Azathothas (https://github.com/Azathothas)"
note:
  - "[DO NOT RUN] (Meant for pkgforge CI Only)"
  - "Built Using RunImage [cachyos]. Check/Report @ https://github.com/VHSgunzo/runimage"
  - "Learn more @ https://docs.pkgforge.dev/formats/packages/runimage"
  - "[PORTABLE] (Works on AnyLinux)"
provides:
  - "kdeutils=>ark"
  - "kdeutils=>filelight"
  - "kdeutils=>francis"
  - "kdeutils=>isoimagewriter"
  - "kdeutils=>kalk"
  - "kdeutils=>kalm"
  - "kdeutils=>kate"
  - "kdeutils=>kbackup"
  - "kdeutils=>kcalc"
  - "kdeutils=>kcharselect"
  - "kdeutils=>kclock"
  - "kdeutils=>kdebugsettings"
  - "kdeutils:kde-utilities"
  - "kdeutils=>kdf"
  - "kdeutils=>kdialog"
  - "kdeutils=>keditbookmarks"
  - "kdeutils=>keysmith"
  - "kdeutils=>kfind"
  - "kdeutils=>kgpg"
  - "kdeutils=>kongress"
  - "kdeutils=>konsole"
  - "kdeutils=>krecorder"
  - "kdeutils=>kteatime"
  - "kdeutils=>ktimer"
  - "kdeutils=>ktrip"
  - "kdeutils=>kwalletmanager"
  - "kdeutils=>kweather"
  - "kdeutils=>kwrite"
  - "kdeutils=>markdownpart"
  - "kdeutils=>skanpage"
  - "kdeutils=>sweeper"
  - "kdeutils=>telly-skout"
  - "kdeutils=>yakuake"
repology:
  - "kdeutils"
src_url:
  - "https://archlinux.org/groups/x86_64/kde-utilities/"
tag:
  - "utilities"
x_exec:
  host:
    - "x86_64-Linux"
  shell: "bash"
  pkgver: |
    curl -qfsSL "https://gitlab.archlinux.org/archlinux/packaging/packages/kde-applications-meta/-/raw/main/PKGBUILD" | sed -n 's/^pkgver=//p' | tr -d '"'\''[:space:]'
  run: |
    #Get BaseImage
     curl -qfsSL "https://github.com/pkgforge-dev/runimage-base/releases/download/cachyos_$(uname -m)/runimage" -o "${SBUILD_TMPDIR}/runimage"
     chmod -v 'a+x' "${SBUILD_TMPDIR}/runimage"
     [[ -s "${SBUILD_TMPDIR}/runimage" ]] || exit 1
    #Deps
     build_image()
      {
       #Requirements
        pacman -y --sync --refresh --refresh --sysupgrade --noconfirm
        #BASE_PKGS=()
        #pacman -S "${BASE_PKGS[@]}" --needed --noconfirm 
        #for pkg in "${BASE_PKGS[@]}"; do pacman -S "${pkg}" --overwrite \* --noconfirm 2>/dev/null; done
       #Main Package
        pacman -S "kde-utilities" --noconfirm
        command -v "ark" >/dev/null 2>&1 || exit 1
       #Debloat & Shrink
        pacman -Ql "kde-utilities"
        pacman -Rsn base-devel --noconfirm 2>/dev/null
        pacman -Rsn perl --noconfirm 2>/dev/null
        pacman -Rsn python --noconfirm 2>/dev/null
        pacman -Scc --noconfirm ; yay -Scc --noconfirm
        rim-shrink --all
       #Config
        echo 'RIM_CMPRS_LVL="${RIM_CMPRS_LVL:=22}"' > "${RUNDIR}/config/Run.rcfg"
        echo 'RIM_QUIET_MODE="${RIM_QUIET_MODE:=1}"' >> "${RUNDIR}/config/Run.rcfg"
        echo 'RIM_CMPRS_BSIZE="${RIM_CMPRS_BSIZE:=24}"' >> "${RUNDIR}/config/Run.rcfg"
        echo 'RIM_SHARE_ICONS="${RIM_SHARE_ICONS:=1}"' >> "${RUNDIR}/config/Run.rcfg"
        echo 'RIM_SHARE_FONTS="${RIM_SHARE_FONTS:=1}"' >> "${RUNDIR}/config/Run.rcfg"
        echo 'RIM_SHARE_THEMES="${RIM_SHARE_THEMES:=1}"' >> "${RUNDIR}/config/Run.rcfg"
        echo 'RIM_UPDATE_SHRINK="${RIM_UPDATE_SHRINK:=1}"' >> "${RUNDIR}/config/Run.rcfg"
        echo 'RIM_SYS_NVLIBS="${RIM_SYS_NVLIBS:=1}"' >> "${RUNDIR}/config/Run.rcfg"
       #Rebuild [Dwarfs ZSTD 22]
        rim-build --bsize '24' --clvl '22' --dwfs "${SBUILD_OUTDIR}/${PKG}"
      }
     export -f build_image
    #Build 
     RIM_NO_NVIDIA_CHECK="1" RIM_OVERFS_MODE="1" RIM_ROOT="1" RIM_UNSHARE_USERS="1" \
     "${SBUILD_TMPDIR}/runimage" bash -c "build_image"
     [[ -s "${SBUILD_OUTDIR}/${PKG}" && ! -d "${SBUILD_OUTDIR}/${PKG}" ]] || { echo "[-] FATAL: ${SBUILD_OUTDIR}/${PKG} is Missing/Empty" >&2; exit 1; }
    #Extract Metadata
     #"${SBUILD_OUTDIR}/${PKG}" rim-dinteg --list
     #HOME="${SBUILD_TMPDIR}/integ_files" "${SBUILD_OUTDIR}/${PKG}" rim-dinteg --verbose --add "kdeutils.*"
    #Desktop
     if [[ ! -s "${SBUILD_OUTDIR}/${PKG}.desktop" ]]; then
       find -L "${SBUILD_TMPDIR}/integ_files" -name "*.desktop" -printf "%s %p\n" -quit | sort -n | awk 'NR==1 {print $2}' | xargs -I "{}" sh -c 'cp -fv "{}" "${SBUILD_OUTDIR}/${PKG}.desktop"'
     fi
     sed '/.*DBusActivatable.*/I d' -i "${SBUILD_OUTDIR}/${PKG}.desktop"
     sed -E 's/\s+setup\s+/ /Ig' -i "${SBUILD_OUTDIR}/${PKG}.desktop"
     sed "s/Icon=[^ ]*/Icon=${PKG}/" -i "${SBUILD_OUTDIR}/${PKG}.desktop"
    #Icon
     if [[ ! -s "${SBUILD_OUTDIR}/${PKG}.png" && ! -s "${SBUILD_OUTDIR}/${PKG}.svg" ]]; then
       find -L "${SBUILD_TMPDIR}/integ_files" -type f,l  -regex '.*\.\(png\|svg\)' \
        -not -regex '.*\(favicon\|/\(16x16\|22x22\|24x24\|32x32\|36x36\|48x48\|64x64\|72x72\|96x96\)/\).*' \
        | awk '{print length, $0}' | sort -n | awk 'NR==1 {print $2}' | xargs -I "{}" cp -fv "{}" "${SBUILD_OUTDIR}/${PKG}.png"
       if [[ ! -f "${SBUILD_OUTDIR}/${PKG}.png" || $(stat -c%s "${SBUILD_OUTDIR}/${PKG}.png") -le 3 ]]; then
        find -L "${SBUILD_TMPDIR}/integ_files" -regex ".*\(128x128/apps\|256x256\)/.*${PKG}.*\.\(png\|svg\)" -printf "%s %p\n" -quit | sort -n | awk 'NR==1 {print $2}' | xargs -I "{}" cp -fv "{}" "${SBUILD_OUTDIR}/${PKG}.png"
       fi
       cp -fv "${SBUILD_OUTDIR}/${PKG}.png" "${SBUILD_OUTDIR}/.DirIcon"
     fi