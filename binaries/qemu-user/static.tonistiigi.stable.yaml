#!/SBUILD ver @v1.0.0
#SELF: https://raw.githubusercontent.com/pkgforge/soarpkgs/refs/heads/main/binaries/qemu-user/static.tonistiigi.stable.yaml
_disabled: false

pkg: "qemu-user"
pkg_id: "github.com.tonistiigi.binfmt.stable"
pkg_type: "static"
category:
  - "ConsoleOnly"
  - "Utility"
description: #https://www.qemu.org/docs/master/user/main.html#linux-user-space-emulator
  _default: "QEMU user mode Emulation & Virtualization binaries"
  qemu-aarch64: "Simulate a 64-bit Arm machine [qemu-user]"
  qemu-aarch64_be: "Simulate a 64-bit big-endian Arm machine [qemu-user]"
  qemu-alpha: "Simulate a DEC Alpha machine [qemu-user]"
  qemu-arm: "Simulate a 32-bit Arm machine [qemu-user]"
  qemu-armeb: "Simulate a 32-bit big-endian Arm machine [qemu-user]"
  qemu-cris: "Simulate a CRIS (Code Reduced Instruction Set) machine [qemu-user]"
  qemu-hexagon: "Simulate a Qualcomm Hexagon DSP [qemu-user]"
  qemu-hppa: "Simulate a HP PA-RISC machine [qemu-user]"
  qemu-i386: "Simulate a 32-bit x86 machine [qemu-user]"
  qemu-loongarch64: "Simulate a 64-bit LoongArch machine [qemu-user]"
  qemu-m68k: "Simulate a Motorola 68000 series machine [qemu-user]"
  qemu-microblaze: "Simulate a Xilinx MicroBlaze big-endian machine [qemu-user]"
  qemu-microblazeel: "Simulate a Xilinx MicroBlaze little-endian machine [qemu-user]"
  qemu-mips: "Simulate a 32-bit big-endian MIPS machine [qemu-user]"
  qemu-mips64: "Simulate a 64-bit big-endian MIPS machine [qemu-user]"
  qemu-mips64el: "Simulate a 64-bit little-endian MIPS machine [qemu-user]"
  qemu-mipsel: "Simulate a 32-bit little-endian MIPS machine [qemu-user]"
  qemu-mipsn32: "Simulate a 32-bit big-endian MIPS machine with N32 ABI [qemu-user]"
  qemu-mipsn32el: "Simulate a 32-bit little-endian MIPS machine with N32 ABI [qemu-user]"
  qemu-nios2: "Simulate an Altera Nios II machine [qemu-user]"
  qemu-or1k: "Simulate an OpenRISC 1000 machine [qemu-user]"
  qemu-ppc: "Simulate a 32-bit PowerPC machine [qemu-user]"
  qemu-ppc64: "Simulate a 64-bit big-endian PowerPC machine [qemu-user]"
  qemu-ppc64le: "Simulate a 64-bit little-endian PowerPC machine [qemu-user]"
  qemu-riscv32: "Simulate a 32-bit RISC-V machine [qemu-user]"
  qemu-riscv64: "Simulate a 64-bit RISC-V machine [qemu-user]"
  qemu-s390x: "Simulate an IBM System z machine [qemu-user]"
  qemu-sh4: "Simulate a SuperH SH-4 little-endian machine [qemu-user]"
  qemu-sh4eb: "Simulate a SuperH SH-4 big-endian machine [qemu-user]"
  qemu-sparc: "Simulate a 32-bit SPARC machine [qemu-user]"
  qemu-sparc32plus: "Simulate a 32-bit SPARC V8+ machine [qemu-user]"
  qemu-sparc64: "Simulate a 64-bit SPARC machine [qemu-user]"
  qemu-x86_64: "Simulate a 64-bit x86 machine [qemu-user]"
  qemu-xtensa: "Simulate a Tensilica Xtensa little-endian machine [qemu-user]"
  qemu-xtensaeb: "Simulate a Tensilica Xtensa big-endian machine [qemu-user]"
homepage:
  - "https://github.com/tonistiigi/binfmt"
license:
  - id: "MIT"
    url: "https://github.com/tonistiigi/binfmt/raw/6ea8f932e3a7e3a05691b9b0faade6123545489a/LICENSE"
maintainer:
  - "Azathothas (https://github.com/Azathothas)"
note:
  - "[DO NOT RUN] (Meant for pkgforge CI Only)"
  - "Pre Built Binary Fetched from Upstream. Check/Report @ https://github.com/tonistiigi/binfmt"
provides:
  - "qemu-aarch64"
  - "qemu-arm"
  - "qemu-i386"
  - "qemu-loongarch64"
  - "qemu-mips64"
  - "qemu-mips64el"
  - "qemu-ppc64le"
  - "qemu-s390x"
  - "qemu-x86_64"
repology:
  - "qemu-user"
src_url:
  - "https://github.com/tonistiigi/binfmt"
tag:
  - "Utility"
x_exec:
  host:
    - "aarch64-Linux"
    - "riscv64-Linux"
    - "x86_64-Linux"
  shell: "bash"
  pkgver: |
    curl -qfsSL "https://api.gh.pkgforge.dev/repos/tonistiigi/binfmt/releases?per_page=100" | jq -r '[.[] | select(.draft == false and .prerelease == false)] | map(select(.tag_name | contains("deploy"))) | .[0].tag_name | gsub("\\s+"; "")' |\
     tr -d '"'\''[:space:]'
  run: |
    #Download
    case "$(uname -m)" in
      aarch64)
        soar dl "https://github.com/tonistiigi/binfmt@${PKGVER}" --match "qemu" --match "linux,arm64,gz" --exclude "binfmt" --exclude "amd64,x86,x64,sha256,sha512,bsd,macos,windows" -o "${SBUILD_TMPDIR}/${PKG}.archive" --yes
        ;;
      riscv64)
        soar dl "https://github.com/tonistiigi/binfmt@${PKGVER}" --match "qemu" --match "linux,riscv64,gz" --exclude "binfmt" --exclude "asc,sha256,sha512,bsd,macos,windows" -o "${SBUILD_TMPDIR}/${PKG}.archive" --yes
        ;;
      x86_64)
        soar dl "https://github.com/tonistiigi/binfmt@${PKGVER}" --match "qemu" --match "linux,amd64,gz" --exclude "binfmt" --exclude "aarch,arm,i386,i686,sha256,sha512,bsd,macos,windows" -o "${SBUILD_TMPDIR}/${PKG}.archive" --yes
        ;;
    esac
    #Extract
    while E_X=$(find "${SBUILD_TMPDIR}" -type f -exec file -i "{}" + | 
     grep -Ei "archive|compressed|gzip|x-compress|x-tar" |
     grep -iv "application/.*executable" |
     cut -d: -f1 | head -n1); [ -n "${E_X}" ]
     do
       7z e "${E_X}" -o"${SBUILD_TMPDIR}/." -y && {
        file -i "${E_X}" | grep -q "application/.*executable" && break
        rm -f "${E_X}"
       } || break
     done
    #Copy
    find "${SBUILD_TMPDIR}" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|inode/symlink|text/x-perl|text/.*script" | cut -d":" -f1 | xargs realpath --no-symlinks | xargs -I "{}" rsync -achvL "{}" "${SBUILD_OUTDIR}"