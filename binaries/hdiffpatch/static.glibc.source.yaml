#!/SBUILD ver @v1.0.0    
#SELF: https://raw.githubusercontent.com/pkgforge/soarpkgs/refs/heads/main/binaries/hdiffpatch/static.glibc.source.yaml
_disabled: false

pkg: "hdiffpatch"
pkg_id: "github.com.sisong.HDiffPatch.glibc"
pkg_type: "static"
category:
  - "ConsoleOnly"
  - "Utility"
description: "Fast Binary diff/patch tools with small deltas/differentials and low memory use"
homepage:
  - "https://github.com/sisong/HDiffPatch"
license:
  - id: "MIT"
    url: "https://github.com/sisong/HDiffPatch/raw/47cbf456d8872bf4ee452f80ce6a674fa2a5312e/LICENSE"
maintainer:
  - "Azathothas (https://github.com/Azathothas)"
note:
  - "[DO NOT RUN] (Meant for pkgforge CI Only)"
  - "Built From Source (Latest Git HEAD). Check/Report @ https://github.com/sisong/HDiffPatch"
  - "Statically Linked on Debian (GLIBC)"
provides:
  - "hdiffz"
  - "hpatchz"
#repology:
#  - "hdiffpatch"
src_url:
  - "https://github.com/sisong/HDiffPatch"
tag:
  - "zsync"
x_exec:
  host:
    - "aarch64-Linux"
    - "x86_64-Linux"
  shell: "bash"
  pkgver: |
    pushd "$(mktemp -d)" >/dev/null 2>&1 && \
    git clone --depth="1" --filter="blob:none" --no-checkout --single-branch --quiet "https://github.com/sisong/HDiffPatch" "./TEMPREPO" >/dev/null 2>&1 && \
    git --git-dir="./TEMPREPO/.git" --no-pager log -1 --pretty=format:'HEAD-%h-%cd' --date=format:'%y%m%dT%H%M%S' && \
    [ -d "$(realpath .)/TEMPREPO" ] && rm -rf "$(realpath .)" >/dev/null 2>&1 && popd >/dev/null 2>&1
  run: |
    #Build
     mkdir -pv "${SBUILD_TMPDIR}/tmp" && docker run --privileged --net="host" --name "debian-builder-unstable" --pull="always" \
     -e "PKG=${PKG}" -e "PKG_ID=${PKG_ID}" -e "PKG_TYPE=${PKG_TYPE}" -e "PKG_VER=${PKG_VER}" \
     -e "PKGVER=${PKGVER}" -e "SBUILD_PKG=${SBUILD_PKG}" -e "SBUILD_PKGVER=${SBUILD_PKGVER}" \
     --volume "${SBUILD_TMPDIR}/tmp:/tmp:rw" \
     "ghcr.io/pkgforge/devscripts/debian-builder-unstable:$(uname -m)" \
      bash -l -c '
      #Setup ENV
       set -x ; chown -R "$(whoami):$(whoami)" "/tmp" 2>/dev/null ; chmod -v "1777" "/tmp"
       mkdir -p "/build-bins" && pushd "$(mktemp -d)" >/dev/null 2>&1
      #Build
       git clone --filter "blob:none" --depth="1" --quiet "https://github.com/sisong/HDiffPatch" "./TEMPREPO" && cd "./TEMPREPO"
       git clone --filter="blob:none" --depth="1" --single-branch "https://github.com/sisong/bzip2.git" "../bzip2"
       git clone --filter="blob:none" --depth="1" --single-branch "https://github.com/sisong/libdeflate.git" "../libdeflate"
       git clone --filter="blob:none" --depth="1" --single-branch "https://github.com/sisong/libmd5.git" "../libmd5"
       git clone --filter="blob:none" --depth="1" --single-branch "https://github.com/sisong/lzma.git" "../lzma"
       git clone --filter="blob:none" --depth="1" --single-branch "https://github.com/sisong/zstd.git" "../zstd"
       git clone --filter="blob:none" --depth="1" --single-branch "https://github.com/sisong/zlib.git" "../zlib"
       git submodule update --init --recursive
       export CC="clang"
       export CXX="clang++"
       export CFLAGS="-Os -flto=auto -fuse-ld=$(which mold) -g0 -pipe -static -static-pie -v -w -Wno-error"
       export CPPFLAGS="${CFLAGS}"
       export CXXFLAGS="${CFLAGS}"
       export LD="$(which mold)"
       export LDFLAGS="-static -static-pie -Wl,--Bstatic,--build-id=none,--no-dynamic-linker,--no-fatal-warnings,--static,--stats,--strip-all,-z,noexecstack,-z,pack-relative-relocs,-z,relro"
       #make --jobs="$(($(nproc)+1))" --keep-going --> mold: error: undefined symbol: ZSTD_splitBlock
       make ZSTD="0" --jobs="$(($(nproc)+1))" --keep-going
       find "." -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|inode/symlink|text/x-perl|text/.*script" | cut -d":" -f1 | xargs realpath | xargs -I "{}" sh -c '\''echo "File: {}"; readelf -p ".comment" "{}"'\''
      #Copy
       find "." -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|inode/symlink|text/x-perl|text/.*script" | cut -d":" -f1 | xargs realpath --no-symlinks | xargs -I "{}" rsync -achvL "{}" "/build-bins/"
       ( askalono --format "json" crawl --follow "$(realpath .)" | jq -r ".. | objects | .path? // empty" | head -n 1 | xargs -I "{}" cp -fv "{}" "/build-bins/LICENSE" ) 2>/dev/null
      #strip & info 
       find "/build-bins/" -type f -exec objcopy --remove-section=".comment" --remove-section=".note.*" "{}" \;
       find "/build-bins/" -type f ! -name "*.no_strip" -exec strip --strip-debug --strip-dwo --strip-unneeded "{}" \; >/dev/null 2>&1
       file "/build-bins/"* && du -sh "/build-bins/"*
       popd >/dev/null 2>&1
      '
    #Copy & Meta
     docker cp "debian-builder-unstable:/build-bins/." "${SBUILD_TMPDIR}/"
     [ -s "${SBUILD_TMPDIR}/LICENSE" ] && cp -fv "${SBUILD_TMPDIR}/LICENSE" "${SBUILD_OUTDIR}/LICENSE"
     find "${SBUILD_TMPDIR}" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|inode/symlink|text/x-perl|text/.*script" | cut -d":" -f1 | xargs realpath --no-symlinks | xargs -I "{}" rsync -achvL "{}" "${SBUILD_OUTDIR}"