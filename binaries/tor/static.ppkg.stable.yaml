#!/SBUILD ver @v1.0.0
#SELF: https://raw.githubusercontent.com/pkgforge/soarpkgs/refs/heads/main/binaries/tor/static.ppkg.stable.yaml
_disabled: false

pkg: "tor"
pkg_id: "ppkg.tor.stable"
pkg_type: "static"
category:
  - "ConsoleOnly"
  - "Utility"
description: "Anonymizing overlay network"
homepage:
  - "https://gitlab.torproject.org/tpo/core/tor"
license:
  - id: "BSD-3-Clause"
    url: "https://gitlab.torproject.org/tpo/core/tor/-/raw/main/LICENSE?ref_type=heads"
maintainer:
  - "Azathothas (https://github.com/Azathothas)"
note:
  - "[DO NOT RUN] (Meant for pkgforge CI Only)"
  - "Built Using ppkg. Check/Report @ https://github.com/leleliu008/ppkg-formula-repository-official-core"
provides:
  - "background"
  - "backtick"
  - "case"
  - "cd"
  - "define"
  - "dollarat"
  - "elgetopt"
  - "elgetpositionals"
  - "elglob"
  - "eltest"
  - "emptyenv"
  - "envfile"
  - "exec"
  - "torb"
  - "tor-cd"
  - "tor-umask"
  - "exit"
  - "export"
  - "fdblock"
  - "fdclose"
  - "fdmove"
  - "fdreserve"
  - "fdswap"
  - "forbacktickx"
  - "foreground"
  - "forstdin"
  - "forx"
  - "getcwd"
  - "getpid"
  - "heredoc"
  - "homeof"
  - "if"
  - "ifelse"
  - "ifte"
  - "ifthenelse"
  - "importas"
  - "loopwhilex"
  - "multidefine"
  - "multisubstitute"
  - "pipeline"
  - "piperw"
  - "posix-cd"
  - "posix-umask"
  - "redirfd"
  - "runblock"
  - "shift"
  - "trap"
  - "tryexec"
  - "umask"
  - "unexport"
  - "wait"
  - "withstdinas"
repology:
  - "tor"
src_url:
  - "https://gitlab.torproject.org/tpo/core/tor"
tag:
  - "Utility"
x_exec:
  host:
    - "aarch64-Linux"
    - "riscv64-Linux"
    - "x86_64-Linux"
  shell: "bash"
  pkgver: |
    curl -qfsSL "https://meta.pkgforge.dev/misc/PPKG.json" |\
     jq -r '(map(select(.pkg == "tor" and .version != "")) | first) // 
     (map(select((.pkg | test("^tor"; "i")) and .version != "")) | first) | .version // empty' | tr -d '"'\''[:space:]'
  run: |
    #Build
     mkdir -pv "${SBUILD_TMPDIR}/tmp" && docker run --privileged --net="host" --name "alpine-builder" --pull="always" \
     -e "PKG=${PKG}" -e "PKG_ID=${PKG_ID}" -e "PKG_TYPE=${PKG_TYPE}" -e "PKG_VER=${PKG_VER}" \
     -e "PKGVER=${PKGVER}" -e "SBUILD_PKG=${SBUILD_PKG}" -e "SBUILD_PKGVER=${SBUILD_PKGVER}" \
     --volume "${SBUILD_TMPDIR}/tmp:/tmp:rw" \
     "docker.io/alpine:edge" \
      sh -c '
      #Setup ENV
       mkdir -p "/build-bins" && cd "$(mktemp -d)" >/dev/null 2>&1
       apk update && apk upgrade --no-interactive 2>/dev/null
       apk cache clean --purge
      #CoreUtils
       apk add 7zip bash binutils build-base clang coreutils croc curl findutils file g++ git grep jq libc-dev linux-headers moreutils rsync tar tree util-linux xz zstd --latest --upgrade --no-interactive 2>/dev/null
      #ppkg
       curl -qfsSL "https://raw.githubusercontent.com/leleliu008/ppkg/master/ppkg" -o "/usr/local/bin/ppkg"
       chmod -v "a+x" "/usr/local/bin/ppkg"
       ppkg setup
       ppkg update
       [ -d "${HOME}/.ppkg/repos.d/official-core/" ] && git -C "${HOME}/.ppkg/repos.d/official-core/" reset --hard
      #Build: https://github.com/leleliu008/ppkg-formula-repository-official-core/raw/master/formula/tor.yml
       ppkg install "tor" --profile="release" -j "$(($(nproc)+1))" --static
       ppkg tree "tor" --dirsfirst -L 5
      #Copy
       PPKG_BINDIR="$(ppkg tree "tor" --dirsfirst -L 1 | grep -o "/.*/.*" 2>/dev/null | tail -n1 | xargs realpath | tr -d "[:space:]")"
       echo "${PPKG_BINDIR}" | grep -qi "ppkg" && [ -d "${PPKG_BINDIR}" ] || exit 1
       rsync -achLv --exclude="*/" "${PPKG_BINDIR}/bin/." "/build-bins/." 2>/dev/null
       rsync -achLv --exclude="*/" "${PPKG_BINDIR}/libexec/." "/build-bins/." 2>/dev/null
       rsync -achLv --exclude="*/" "${PPKG_BINDIR}/sbin/." "/build-bins/." 2>/dev/null
      #strip & info
       find "/build-bins/" -type f -exec objcopy --remove-section=".comment" --remove-section=".note.*" "{}" \;
       find "/build-bins/" -type f ! -name "*.no_strip" -exec strip --strip-all --verbose "{}" 2>/dev/null \;
       find "/build-bins/" -type f -exec bash -c "echo && realpath {} && readelf --section-headers {} 2>/dev/null" \;
       file "/build-bins/"* && stat -c "%n:         %s Bytes" "/build-bins/"* && \
       du "/build-bins/"* --bytes --human-readable --time --time-style="full-iso" --summarize
      '
    #Copy & Meta
     docker cp "alpine-builder:/build-bins/." "${SBUILD_TMPDIR}/"
     [ -s "${SBUILD_TMPDIR}/LICENSE" ] && cp -fv "${SBUILD_TMPDIR}/LICENSE" "${SBUILD_OUTDIR}/LICENSE"
     find "${SBUILD_TMPDIR}" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|inode/symlink|text/x-perl|text/.*script" | cut -d":" -f1 | xargs realpath --no-symlinks | xargs -I "{}" rsync -achvL "{}" "${SBUILD_OUTDIR}"