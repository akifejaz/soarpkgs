#!/SBUILD ver @v1.0.0
#SELF: https://raw.githubusercontent.com/pkgforge/soarpkgs/refs/heads/main/binaries/s6-portable-utils/static.nixpkgs.stable.yaml
_disabled: false

pkg: "s6-portable-utils"
pkg_id: "nixpkgs.s6-portable-utils"
pkg_type: "static"
category:
  - "ConsoleOnly"
  - "Utility"
description: 
  _default: "A set of tiny general Unix utilities optimized for simplicity and small size"
  s6-basename: "Prints the basename of a pathname [s6-portable-utils]"
  s6-cat: "Transfers data from stdin to stdout, until it receives EOF or gets killed [s6-portable-utils]"
  s6-chmod: "Changes the permissions of a file [s6-portable-utils]"
  s6-chown: "Changes the owner and/or group of a file [s6-portable-utils]"
  s6-clock: "Gets/Sets the system clock [s6-portable-utils]"
  s6-cut: "Prints selected portions of the lines of its input [s6-portable-utils]"
  s6-dirname: "Prints the dirname of a path [s6-portable-utils]"
  s6-dumpenv: "Stores environment variables into a directory [s6-portable-utils]"
  s6-echo: "Writes its arguments to stdout [s6-portable-utils]"
  s6-env: "Prints the current environment or modifies the environment before running a program [s6-portable-utils]"
  s6-expr: "Evaluates an expression and writes the result to stdout [s6-portable-utils]"
  s6-false: "Returns 1 [s6-portable-utils]"
  s6-format-filter: "Processes lines according to its arguments, and prints the result [s6-portable-utils]"
  s6-grep: "Matches its input against a pattern [s6-portable-utils]"
  s6-head: "Prints the first lines of its input files [s6-portable-utils]"
  s6-hiercopy: "Copies a directory structure recursively [s6-portable-utils]"
  s6-linkname: "Gives the content of a symbolic link or resolves a path [s6-portable-utils]"
  s6-ln: "Creates a link to a file [s6-portable-utils]"
  s6-ls: "Lists the contents of a directory [s6-portable-utils]"
  s6-maximumtime: "Executes a program with a time limit [s6-portable-utils]"
  s6-mkdir: "Creates directories [s6-portable-utils]"
  s6-mkfifo: "Creates FIFOs, a.k.a. named pipes [s6-portable-utils]"
  s6-nice: "Executes into a program with an altered nice value [s6-portable-utils]"
  s6-nuke: "Sends signals to every process it is allowed to send [s6-portable-utils]"
  s6-pause: "Blocks until it is killed [s6-portable-utils]"
  s6-printenv: "Prints its environment variables [s6-portable-utils]"
  s6-quote: "Quotes a string and writes it to stdout [s6-portable-utils]"
  s6-quote-filter: "Acts as a filter, quoting lines it reads on stdin and writing the quoted lines to stdout [s6-portable-utils]"
  s6-rename: "Atomically renames a file [s6-portable-utils]"
  s6-rmrf: "Removes a file or directory tree entirely [s6-portable-utils]"
  s6-seq: "Prints a sequence of numbers [s6-portable-utils]"
  s6-sleep: "Sleeps for a given time, then optionally executes a program [s6-portable-utils]"
  s6-sort: "Sorts its input [s6-portable-utils]"
  s6-sync: "Flushes all the dirty system buffers, and blocks until they're clean [s6-portable-utils]"
  s6-tai64ndiff: "Acts as a filter, reading from stdin and writing to stdout [s6-portable-utils]"
  s6-tail: "Prints a file or its stdin after a certain number of bytes or lines [s6-portable-utils]"
  s6-touch: "Changes the modification and access times of a file, creating it if it does not exist [s6-portable-utils]"
  s6-true: "Returns 0 [s6-portable-utils]"
  s6-uniquename: "Creates a guaranteed unique file name and prints it to stdout [s6-portable-utils]"
  s6-unquote: "Unquotes a quoted string and writes it to stdout [s6-portable-utils]"
  s6-unquote-filter: "Acts as a filter, reading quoted strings on stdin, unquoting them and writing the results to stdout [s6-portable-utils]"
  s6-update-symlinks: "Links the content of several similar directory trees under a single tree [s6-portable-utils]"
  seekablepipe: "Turns the reading end of a pipe into a seekable file descriptor, using a temporary file [s6-portable-utils]"
distro_pkg:
  alpine:
    - "s6-portable-utils"
  archlinux:
    aur:
      - "s6-portable-utils"
  nixpkgs:
    - "s6-portable-utils"
homepage:
  - "https://skarnet.org/software/s6-portable-utils/"
license:
  - "ISC"  
maintainer:
  - "Azathothas (https://github.com/Azathothas)"
note:
  - "[DO NOT RUN] (Meant for pkgforge CI Only)"
  - "Built Using Nix. Check/Report @ https://github.com/NixOS/nixpkgs"
provides:
  - "s6-basename"
  - "s6-cat"
  - "s6-chmod"
  - "s6-chown"
  - "s6-clock"
  - "s6-cut"
  - "s6-dirname"
  - "s6-dumpenv"
  - "s6-echo"
  - "s6-env"
  - "s6-expr"
  - "s6-false"
  - "s6-format-filter"
  - "s6-grep"
  - "s6-head"
  - "s6-hiercopy"
  - "s6-linkname"
  - "s6-ln"
  - "s6-ls"
  - "s6-maximumtime"
  - "s6-mkdir"
  - "s6-mkfifo"
  - "s6-nice"
  - "s6-nuke"
  - "s6-pause"
  - "s6-printenv"
  - "s6-quote"
  - "s6-quote-filter"
  - "s6-rename"
  - "s6-rmrf"
  - "s6-seq"
  - "s6-sleep"
  - "s6-sort"
  - "s6-sync"
  - "s6-tai64ndiff"
  - "s6-tail"
  - "s6-touch"
  - "s6-true"
  - "s6-uniquename"
  - "s6-unquote"
  - "s6-unquote-filter"
  - "s6-update-symlinks"
  - "seekablepipe"  
repology:
  - "s6-portable-utils"
src_url:
  - "https://github.com/skarnet/s6-portable-utils"
tag:
  - "sys-apps"
x_exec:
  host:
    - "aarch64-Linux"
    - "x86_64-Linux"
  shell: "bash"
  pkgver: |
    nix derivation show "nixpkgs#s6-portable-utils" --impure --refresh --quiet 1>&1 2>/dev/null | sed -n '/^[[:space:]]*{/,$p' | jq -r '.. | objects | (select(has("version")).version, (select(has("env")) | select(.env.__json != null) | .env.__json | fromjson | select(has("version")).version) | select(.))' | tr -d '[:space:]'
  run: |
    #Build
     echo -e "\n" ; nix-instantiate --eval --expr "builtins.toJSON (with import <nixpkgs> {}; ${PKG}.meta)" --quiet 2>/dev/null | jq -r fromjson 2>/dev/null ; echo -e "\n"
     nix-build '<nixpkgs>' --impure --attr "pkgsStatic.s6-portable-utils" --cores "$(($(nproc)+1))" --max-jobs "$(($(nproc)+1))" --log-format bar-with-logs --out-link "${SBUILD_TMPDIR}/nixbuild"
     find -L "$(find "${SBUILD_TMPDIR}" -maxdepth 1 -type d -o -type l -exec realpath "{}" \; | grep -Ev '^\.$' | head -n 1)" | sort | awk -F/ '{indent=""; for (i=2; i<NF; i++) indent=indent " "; print (NF>1 ? indent "--> " $NF : $NF)}'
    #Fix Perms
     find "${SBUILD_TMPDIR}" -maxdepth 1 -type d -o -type l -exec realpath "{}" \; | grep -Ev '^\.$' |\
     xargs -I{} find -L "{}" -type d -iregex ".*\(bin\|exec\).*" | \
     xargs -I{} sudo rsync -achLv --no-relative "{}/." "${SBUILD_TMPDIR}/."
     sudo chown -Rv "$(whoami):$(whoami)" "${SBUILD_TMPDIR}" && chmod -Rv 755 "${SBUILD_TMPDIR}"
    #Fix Shell Scripts
     find "${SBUILD_TMPDIR}" -type f -iregex '.*\.\(bin\|pl\)$' -exec bash -c 'mv -fv "$1" "${1%.*}"' _ "{}" \;
     find "${SBUILD_TMPDIR}" -maxdepth 1 -type f \( -name "*.sh" -o -exec sh -c 'file -i "$1" | grep -qiv "application/.*executable"' sh {} \; \) -print0 | xargs -0 -I {} sh -c '
           sed "s|^#!/nix/store/.*/bin/sh|#!/bin/sh|" -i "{}" 2>/dev/null
           sed "s|/nix/store[^ ]*/bin/\([^ ]*\)|/usr/local/bin/\1|g" -i "{}" 2>/dev/null
           sed "s|/nix/store/[^/]*/bin|/usr/local/bin|g" -i "{}" 2>/dev/null
           sed "s|/nix/store[^/ ]*/bin|/usr/local/bin|g" -i "{}" 2>/dev/null
           sed "s|/nix/store[^ \"'\'']*|/|g" -i "{}" 2>/dev/null
       '
    #Copy
     find "${SBUILD_TMPDIR}" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei 'application/.*executable|text/x-perl|text/x-shellscript' | cut -d":" -f1 | xargs realpath | sort -u | xargs -I "{}" rsync -achvL "{}" "${SBUILD_OUTDIR}"
     ( askalono --format "json" crawl --follow "${SBUILD_TMPDIR}" | jq -r ".. | objects | .path? // empty" | head -n 1 | xargs -I "{}" cp -fv "{}" "${SBUILD_OUTDIR}/LICENSE" ) 2>/dev/null 