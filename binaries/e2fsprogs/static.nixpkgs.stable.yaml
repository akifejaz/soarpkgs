#!/SBUILD ver @v1.0.0
#SELF: https://raw.githubusercontent.com/pkgforge/soarpkgs/refs/heads/main/binaries/e2fsprogs/static.nixpkgs.stable.yaml

pkg: "e2fsprogs"
pkg_id: "nixpkgs.e2fsprogs"
pkg_type: "static"
category:
  - "ConsoleOnly"
  - "Utility"
description: 
  _default: "Tools for creating and checking ext2/ext3/ext4 filesystems"
  badblocks: "Search a device for bad blocks [e2fsprogs]"
  chattr: "Change file attributes on a Linux file system [e2fsprogs]"
  compile_et: "Error table compiler [e2fsprogs]"
  debugfs: "ext2/ext3/ext4 file system debugger [e2fsprogs]"
  dumpe2fs: "Dump ext2/ext3/ext4 file system information [e2fsprogs]"
  e2freefrag: "Report free space fragmentation information [e2fsprogs]"
  e2fsck: "Check a Linux ext2/ext3/ext4 file system [e2fsprogs]"
  e2image: "Save critical ext2/ext3/ext4 file system metadata to a file [e2fsprogs]"
  e2label: "Change the label on an ext2/ext3/ext4 file system [e2fsprogs]"
  e2mmpstatus: "Check MMP status of an ext4 file system [e2fsprogs]"
  e2scrub: "Check the contents of a mounted ext[234] file system [e2fsprogs]"
  e2scrub_all: "Check all mounted ext(2,3,4) file systems for errors [e2fsprogs]"
  e2undo: "Replay an undo log for an ext2/ext3/ext4 file system [e2fsprogs]"
  e4crypt: "ext4 file system encryption utility [e2fsprogs]"
  e4defrag: "Defragmenter for ext4 file system [e2fsprogs]"
  filefrag: "Report on file fragmentation [e2fsprogs]"
  fsck.ext2: "Check a Linux ext2 file system [e2fsprogs]"
  fsck.ext3: "Check a Linux ext3 file system [e2fsprogs]"
  fsck.ext4: "Check a Linux ext4 file system [e2fsprogs]"
  logsave: "Save the output of a command in a logfile [e2fsprogs]"
  lsattr: "List ext2/ext3/ext4 file attributes [e2fsprogs]"
  mk_cmds: "Convert a table of command names and help messages into a C source file [e2fsprogs]"
  mke2fs: "Create an ext2/ext3/ext4 file system [e2fsprogs]"
  mkfs.ext2: "Create an ext2 file system [e2fsprogs]"
  mkfs.ext3: "Create an ext3 file system [e2fsprogs]"
  mkfs.ext4: "Create an ext4 file system [e2fsprogs]"
  mklost+found: "Create a lost+found directory on a mounted ext2/ext3/ext4 file system [e2fsprogs]"
  resize2fs: "ext2/ext3/ext4 file system resizer [e2fsprogs]"
  tune2fs: "Adjust tunable file system parameters on ext2/ext3/ext4 file systems [e2fsprogs]"
distro_pkg:
  alpine:
    - "e2fsprogs"
  archlinux:
    aur:
      - "e2fsprogs-git"
  debian:
    - "e2fsprogs"
  nixpkgs:
    - "e2fsprogs"
homepage:
  - "https://e2fsprogs.sourceforge.net"
  - "https://github.com/tytso/e2fsprogs"
  - "https://sourceforge.net/projects/e2fsprogs"
  - "https://git.kernel.org/pub/scm/fs/ext2/e2fsprogs.git"
maintainer:
  - "Azathothas (https://github.com/Azathothas)"
note:
  - "[DO NOT RUN] (Meant for pkgforge CI Only)"
  - "Built Using Nix. Check/Report @ https://github.com/NixOS/nixpkgs"
provides:
  - "badblocks"
  - "chattr"
  - "compile_et"
  - "debugfs"
  - "dumpe2fs"
  - "e2freefrag"
  - "e2fsck"
  - "e2image"
  - "e2label"
  - "e2mmpstatus"
  - "e2scrub"
  - "e2scrub_all"
  - "e2undo"
  - "e4crypt"
  - "e4defrag"
  - "filefrag"
  - "fsck.ext2"
  - "fsck.ext3"
  - "fsck.ext4"
  - "logsave"
  - "lsattr"
  - "mk_cmds"
  - "mke2fs"
  - "mkfs.ext2"
  - "mkfs.ext3"
  - "mkfs.ext4"
  - "mklost+found"
  - "resize2fs"
  - "tune2fs"  
repology:
  - "e2fsprogs"
src_url:
  - "https://git.kernel.org/pub/scm/fs/ext2/e2fsprogs.git"
tag:
  - "e2fs"
  - "ext2"
x_exec:
  host:
    - "aarch64-Linux"
    - "x86_64-Linux"
  shell: "bash"
  pkgver: |
    nix derivation show "nixpkgs#e2fsprogs" --impure --refresh --quiet 1>&1 2>/dev/null | sed -n '/^[[:space:]]*{/,$p' | jq -r '.. | objects | (select(has("version")).version, (select(has("env")) | select(.env.__json != null) | .env.__json | fromjson | select(has("version")).version) | select(.))' | tr -d '[:space:]'
  run: |
    #Build
     echo -e "\n" ; nix-instantiate --eval --expr "builtins.toJSON (with import <nixpkgs> {}; ${PKG}.meta)" --quiet 2>/dev/null | jq -r fromjson 2>/dev/null ; echo -e "\n"
     nix-build '<nixpkgs>' --impure --attr "pkgsStatic.e2fsprogs" --cores "$(($(nproc)+1))" --max-jobs "$(($(nproc)+1))" --log-format bar-with-logs --out-link "${SBUILD_TMPDIR}/nixbuild"
     find -L "$(find "${SBUILD_TMPDIR}" -maxdepth 1 -type d -o -type l -exec realpath "{}" \; | grep -Ev '^\.$' | head -n 1)" | sort | awk -F/ '{indent=""; for (i=2; i<NF; i++) indent=indent " "; print (NF>1 ? indent "--> " $NF : $NF)}'
    #Fix Perms
     find "${SBUILD_TMPDIR}" -maxdepth 1 -type d -o -type l -exec realpath "{}" \; | grep -Ev '^\.$' |\
     xargs -I{} find -L "{}" -type d -iregex ".*\(bin\|exec\).*" | \
     xargs -I{} sudo rsync -achLv --no-relative "{}/." "${SBUILD_TMPDIR}/."
     sudo chown -Rv "$(whoami):$(whoami)" "${SBUILD_TMPDIR}" && chmod -Rv 755 "${SBUILD_TMPDIR}"
    #Fix Shell Scripts
     find "${SBUILD_TMPDIR}" -type f -iregex '.*\.\(bin\|pl\)$' -exec bash -c 'mv -fv "$1" "${1%.*}"' _ "{}" \;
     find "${SBUILD_TMPDIR}" -maxdepth 1 -type f \( -name "*.sh" -o -exec sh -c 'file -i "$1" | grep -qiv "application/.*executable"' sh {} \; \) -print0 | xargs -0 -I {} sh -c '
           sed "s|^#!/nix/store/.*/bin/sh|#!/bin/sh|" -i "{}" 2>/dev/null
           sed "s|/nix/store[^ ]*/bin/\([^ ]*\)|/usr/local/bin/\1|g" -i "{}" 2>/dev/null
           sed "s|/nix/store/[^/]*/bin|/usr/local/bin|g" -i "{}" 2>/dev/null
           sed "s|/nix/store[^/ ]*/bin|/usr/local/bin|g" -i "{}" 2>/dev/null
           sed "s|/nix/store[^ \"'\'']*|/|g" -i "{}" 2>/dev/null
       '
    #Copy
     find "${SBUILD_TMPDIR}" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei 'application/.*executable|text/x-perl|text/x-shellscript' | cut -d":" -f1 | xargs realpath | sort -u | xargs -I "{}" rsync -achvL "{}" "${SBUILD_OUTDIR}"
     ( askalono --format "json" crawl --follow "${SBUILD_TMPDIR}" | jq -r ".. | objects | .path? // empty" | head -n 1 | xargs -I "{}" cp -fv "{}" "${SBUILD_OUTDIR}/LICENSE" ) 2>/dev/null 