#!/SBUILD ver @v1.0.0    
#SELF: https://raw.githubusercontent.com/pkgforge/soarpkgs/refs/heads/main/binaries/e2fsprogs/static.official.source.yaml
_disabled: false

pkg: "e2fsprogs"
pkg_id: "github.com.tytso.e2fsprogs.source"
pkg_type: "static"
category:
  - "ConsoleOnly"
  - "Utility"
description: 
  _default: "Tools for creating and checking ext2/ext3/ext4 filesystems"
  badblocks: "Search a device for bad blocks [e2fsprogs]"
  blkid: "User command-line interface for libblkid [e2fsprogs]"
  chattr: "Change file attributes on a Linux file system [e2fsprogs]"
  crcsum: "Check CRC Checksum [e2fsprogs]"
  debugfs: "ext2/ext3/ext4 file system debugger [e2fsprogs]"
  dumpe2fs: "Dump ext2/ext3/ext4 file system information [e2fsprogs]"
  e2freefrag: "Report free space fragmentation information [e2fsprogs]"
  e2fsck: "Check a Linux ext2/ext3/ext4 file system [e2fsprogs]"
  e2fuzz: "Fuzz an ext4 image, for testing purposes [e2fsprogs]"
  e2image: "Save critical ext2/ext3/ext4 file system metadata to a file [e2fsprogs]"
  e2initrd_helper: "e2initrd_helper [e2fsprogs]"
  e2label: "Change the label on an ext2/ext3/ext4 file system [e2fsprogs]"
  e2mmpstatus: "Check MMP status of an ext4 file system [e2fsprogs]"
  e2scrub: "Check the contents of a mounted ext[234] file system [e2fsprogs]"
  e2scrub_all: "Check all mounted ext[234] file systems for errors [e2fsprogs]"
  e2undo: "Replay an undo log for an ext2/ext3/ext4 file system [e2fsprogs]"
  e4crypt: "ext4 file system encryption utility [e2fsprogs]"
  e4defrag: "Defragmenter for ext4 file system [e2fsprogs]"
  filefrag: "Report on file fragmentation [e2fsprogs]"
  fsck: "Check a Linux ext2/ext3/ext4 file system [e2fsprogs]"
  fuse2fs: "FUSE file system client for ext2/ext3/ext4 file systems [e2fsprogs]"
  gen_crc32ctable: "Generate CRC32 Table [e2fsprogs]"
  logsave: "Save the output of a command in a logfile [e2fsprogs]"
  lsattr: "List ext2/ext3/ext4 file attributes [e2fsprogs]"
  mke2fs: "Create an ext2/ext3/ext4 file system [e2fsprogs]"
  mklost+found: "Create a lost+found directory on a mounted ext2/ext3/ext4 file system [e2fsprogs]"
  resize2fs: "ext2/ext3/ext4 file system resizer [e2fsprogs]"
  subst: "Quickie program to do @ substitutions [e2fsprogs]"
  symlinks: "Create/Manage Symlinks [e2fsprogs]"
  test_extent: "Tester for the extent abstraction [e2fsprogs]"
  test_icount: "Tester for the icount structure [e2fsprogs]"
  tune2fs: "Adjust tunable file system parameters on ext2/ext3/ext4 file systems [e2fsprogs]"
distro_pkg:
  alpine:
    - "e2fsprogs"
  archlinux:
    aur:
      - "e2fsprogs-git"
  debian:
    - "e2fsprogs"
  gnuguix:
    - "e2fsck-static"
    - "e2fsprogs"
  homebrew:
    - "e2fsprogs"
  nixpkgs:
    - "e2fsprogs"
homepage:
  - "https://docs.kernel.org/filesystems/ext4/"
  - "https://git.kernel.org/pub/scm/fs/ext2/e2fsprogs.git"
  - "https://github.com/tytso/e2fsprogs"
license:
  - "GPL"  
maintainer:
  - "Azathothas (https://github.com/Azathothas)"
note:
  - "[DO NOT RUN] (Meant for pkgforge CI Only)"
  - "Built From Source (Latest Git HEAD). Check/Report @ https://github.com/tytso/e2fsprogs"
provides:
  - "badblocks"
  - "blkid"
  - "chattr"
  - "crcsum"
  - "debugfs"
  - "dumpe2fs"
  - "e2freefrag"
  - "e2fsck"
  - "e2fuzz"
  - "e2image"
  - "e2initrd_helper"
  - "e2undo"
  - "e4crypt"
  - "e4defrag"
  - "filefrag"
  - "fsck"
  - "fuse2fs"
  - "gen_crc32ctable"
  - "logsave"
  - "lsattr"
  - "mke2fs"
  - "mklost+found"
  - "resize2fs"
  - "subst"
  - "symlinks"
  - "test_extent"
  - "test_icount"
  - "tune2fs"
repology:
  - "e2fsprogs"
src_url:
  - "https://github.com/tytso/e2fsprogs"
tag:
  - "e2fs"
  - "ext2"
x_exec:
  host:
    - "aarch64-Linux"
    - "x86_64-Linux"
  shell: "bash"
  pkgver: |
    pushd "$(mktemp -d)" >/dev/null 2>&1 && \
    git clone --depth="1" --filter="blob:none" --no-checkout --single-branch --quiet "https://github.com/tytso/e2fsprogs" "./TEMPREPO" >/dev/null 2>&1 && \
    git --git-dir="./TEMPREPO/.git" --no-pager log -1 --pretty=format:'HEAD-%h-%cd' --date=format:'%y%m%dT%H%M%S' && \
    [ -d "$(realpath .)/TEMPREPO" ] && rm -rf "$(realpath .)" >/dev/null 2>&1 && popd >/dev/null 2>&1
  run: |
    #Build
     mkdir -pv "${SBUILD_TMPDIR}/tmp" && docker run --privileged --net="host" --name "alpine-builder" --pull="always" \
     -e "PKG=${PKG}" -e "PKG_ID=${PKG_ID}" -e "PKG_TYPE=${PKG_TYPE}" -e "PKG_VER=${PKG_VER}" \
     -e "PKGVER=${PKGVER}" -e "SBUILD_PKG=${SBUILD_PKG}" -e "SBUILD_PKGVER=${SBUILD_PKGVER}" \
     --volume "${SBUILD_TMPDIR}/tmp:/tmp:rw" \
     "ghcr.io/pkgforge/devscripts/alpine-builder:latest" \
      bash -l -c '
      #Setup ENV
       set -x ; mkdir -p "/build-bins" && pushd "$(mktemp -d)" &>/dev/null
      #Build
       git clone --filter "blob:none" --depth="1" --quiet "https://github.com/tytso/e2fsprogs" "./TEMPREPO" && cd "./TEMPREPO"
       #export CC="clang"
       #export CXX="clang++"
       export CFLAGS="-Os -flto=auto -B/usr/libexec/mold -g0 -pipe -static -v -w -Wno-error"
       export CPPFLAGS="${CFLAGS}"
       export CXXFLAGS="${CFLAGS}"
       export LD="$(which mold)"
       export LDFLAGS="-static -Wl,--Bstatic,--build-id=none,--no-dynamic-linker,--no-fatal-warnings,--static,--stats,--strip-all,-z,noexecstack"
       "./configure" --disable-shared --disable-Werror --enable-static --enable-year2038 --enable-compile-warnings="no"
       make --jobs="$(($(nproc)+1))" --keep-going
       find "." -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|inode/symlink" | cut -d":" -f1 | xargs realpath | xargs -I "{}" sh -c '\''echo "File: {}"; readelf -p ".comment" "{}"'\''
      #Copy
       #cp "./e2fsprogs" "/build-bins/e2fsprogs"
       find "." -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|inode/symlink" | cut -d":" -f1 | xargs realpath --no-symlinks | xargs -I "{}" rsync -achvL "{}" "/build-bins/"
       ( askalono --format "json" crawl --follow "$(realpath .)" | jq -r ".. | objects | .path? // empty" | head -n 1 | xargs -I "{}" cp -fv "{}" "/build-bins/LICENSE" ) 2>/dev/null
      #strip & info 
       find "/build-bins/" -type f -exec objcopy --remove-section=".comment" --remove-section=".note.*" "{}" \;
       find "/build-bins/" -type f ! -name "*.no_strip" -exec strip --strip-all --verbose "{}" 2>/dev/null \;
       find "/build-bins/" -type f -exec bash -c "echo && realpath {} && readelf --section-headers {} 2>/dev/null" \;
       file "/build-bins/"* && stat -c "%n:         %s Bytes" "/build-bins/"* && \
       du "/build-bins/"* --bytes --human-readable --time --time-style="full-iso" --summarize
       popd >/dev/null 2>&1
      '
    #Copy & Meta
     docker cp "alpine-builder:/build-bins/." "${SBUILD_TMPDIR}/"
     [ -s "${SBUILD_TMPDIR}/LICENSE" ] && cp -fv "${SBUILD_TMPDIR}/LICENSE" "${SBUILD_OUTDIR}/LICENSE"
     find "${SBUILD_TMPDIR}" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|inode/symlink|text/x-perl|text/.*script" | cut -d":" -f1 | xargs realpath --no-symlinks | xargs -I "{}" rsync -achvL "{}" "${SBUILD_OUTDIR}"