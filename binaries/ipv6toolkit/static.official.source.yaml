#!/SBUILD ver @v1.0.0    
#SELF: https://raw.githubusercontent.com/pkgforge/soarpkgs/refs/heads/main/binaries/ipv6toolkit/static.official.source.yaml
_disabled: false

pkg: "ipv6toolkit"
pkg_id: "github.com.fgont.ipv6toolkit.source"
pkg_type: "static"
category:
  - "ConsoleOnly"
  - "Utility"
description: 
  _default: "SI6 Networks' IPv6 Toolkit"
  addr6: "Decode IPv6 addresses [ipv6toolkit]"
  blackhole6: "Find IPv6 blackholes [ipv6toolkit]"
  flow6: "Determine the Flow Label generation policy of a target node [ipv6toolkit]"
  frag6: "Determine the Flow Label generation policy of a target node [ipv6toolkit]"
  icmp6: "Exploit potential flaws in the processing of ICMPv6 Error messages [ipv6toolkit]"
  jumbo6: "Exploit potential flaws in the processing of IPv6 Jumbo payloads [ipv6toolkit]"
  messi: "IPv6 Network Reconnaissance Toolkit [ipv6toolkit]"
  mldq6: "Assess attack vectors based on ICMPv6 Multicast Listener Discovery Query messages [ipv6toolkit]"
  na6: "Assess attack vectors based on ICMPv6 Neighbor Advertisement messages [ipv6toolkit]"
  ni6: "Exploit potential flaws in the processing of ICMPv6 Node Information messages [ipv6toolkit]"
  ns6: "Assess attack vectors based on ICMPv6 Neighbor Solicitation messages [ipv6toolkit]"
  path6: "Versatile IPv6 traceroute [ipv6toolkit]"
  ra6: "Assess attack vectors based on ICMPv6 Router Advertisement messages [ipv6toolkit]"
  rd6: "Assess attack vectors based on ICMPv6 Router Advertisement messages [ipv6toolkit]"
  rs6: "Assess attack vectors based on ICMPv6 Router Solicitation messages [ipv6toolkit]"
  scan6: "IPv6 Scanning Tool [ipv6toolkit]"
  script6: "Make complex IPv6 tasks easy [ipv6toolkit]"
  tcp6: "Exploit potential flaws in the processing of TCP/IPv6 packets [ipv6toolkit]"
  udp6: "Exploit potential flaws in the processing of TCP/IPv6 packets [ipv6toolkit]"  
homepage:
  - "https://github.com/fgont/ipv6toolkit"
license:
  - id: "GPL-3.0"
    url: "https://github.com/fgont/ipv6toolkit/raw/9ee80b67054cb394a5e18e82f7124592bc7a0eaf/LICENSE.TXT"
maintainer:
  - "Azathothas (https://github.com/Azathothas)"
note:
  - "[DO NOT RUN] (Meant for pkgforge CI Only)"
  - "Built From Source (Latest Git HEAD). Check/Report @ https://github.com/fgont/ipv6toolkit"
provides:
  - "addr6"
  - "blackhole6"
  - "flow6"
  - "frag6"
  - "icmp6"
  - "jumbo6"
  - "messi"
  - "mldq6"
  - "na6"
  - "ni6"
  - "ns6"
  - "path6"
  - "ra6"
  - "rd6"
  - "rs6"
  - "scan6"
  - "script6"
  - "tcp6"
  - "udp6"
#repology:
#  - "ipv6toolkit"
src_url:
  - "https://github.com/fgont/ipv6toolkit"
tag:
  - "Utility"
x_exec:
  bsys: "docker://gcc+make"
  host:
    - "aarch64-Linux"
    - "x86_64-Linux"
  shell: "bash"
  pkgver: |
    pushd "$(mktemp -d)" >/dev/null 2>&1 && \
    git clone --depth="1" --filter="blob:none" --no-checkout --single-branch --quiet "https://github.com/fgont/ipv6toolkit" "./TEMPREPO" >/dev/null 2>&1 && \
    git --git-dir="./TEMPREPO/.git" --no-pager log -1 --pretty=format:'HEAD-%h-%cd' --date=format:'%y%m%dT%H%M%S' && \
    [ -d "$(realpath .)/TEMPREPO" ] && rm -rf "$(realpath .)" >/dev/null 2>&1 && popd >/dev/null 2>&1
  run: |
    #Build
     mkdir -pv "${SBUILD_TMPDIR}/tmp" && docker run --privileged --net="host" --name "alpine-builder" --pull="always" \
     -e "PKG=${PKG}" -e "PKG_ID=${PKG_ID}" -e "PKG_TYPE=${PKG_TYPE}" -e "PKG_VER=${PKG_VER}" \
     -e "PKGVER=${PKGVER}" -e "SBUILD_PKG=${SBUILD_PKG}" -e "SBUILD_PKGVER=${SBUILD_PKGVER}" \
     --volume "${SBUILD_TMPDIR}/tmp:/tmp:rw" \
     "ghcr.io/pkgforge/devscripts/alpine-builder:$(uname -m)" \
      bash -l -c '
      #Setup ENV
       set -x ; mkdir -pv "/tmp" ; chown -R "$(whoami):$(whoami)" "/tmp" ; chmod -v "1777" "/tmp"
       mkdir -p "/build-bins" && pushd "$(mktemp -d)" &>/dev/null
      #Build
       git clone --filter "blob:none" --depth="1" --quiet "https://github.com/fgont/ipv6toolkit" "./TEMPREPO" && cd "./TEMPREPO"
       #export CC="clang"
       #export CXX="clang++"
       export CFLAGS="-Os -flto=auto -B/usr/libexec/mold -g0 -pipe -static -v -w -Wno-error"
       export CPPFLAGS="${CFLAGS}"
       export CXXFLAGS="${CFLAGS}"
       export LD="$(which mold)"
       export LDFLAGS="-static -Wl,--Bstatic,--build-id=none,--no-dynamic-linker,--no-fatal-warnings,--static,--stats,--strip-all,-z,noexecstack"
       make --jobs="$(($(nproc)+1))" --keep-going
       find "." -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|inode/symlink|text/x-perl|text/.*script" | cut -d":" -f1 | xargs realpath | xargs -I "{}" sh -c '\''echo "File: {}"; readelf -p ".comment" "{}"'\''
      #Copy
       find "." -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|inode/symlink|text/x-perl|text/.*script" | cut -d":" -f1 | xargs realpath --no-symlinks | xargs -I "{}" rsync -achvL "{}" "/build-bins/"
       ( askalono --format "json" crawl --follow "$(realpath .)" | jq -r ".. | objects | .path? // empty" | head -n 1 | xargs -I "{}" cp -fv "{}" "/build-bins/LICENSE" ) 2>/dev/null
      #strip & info 
       find "/build-bins/" -type f -exec objcopy --remove-section=".comment" --remove-section=".note.*" "{}" \;
       find "/build-bins/" -type f ! -name "*.no_strip" -exec strip --strip-all --verbose "{}" 2>/dev/null \;
       find "/build-bins/" -type f -exec bash -c "echo && realpath {} && readelf --section-headers {} 2>/dev/null" \;
       file "/build-bins/"* && stat -c "%n:         %s Bytes" "/build-bins/"* && \
       du "/build-bins/"* --bytes --human-readable --time --time-style="full-iso" --summarize
       popd >/dev/null 2>&1
      '
    #Copy & Meta
     docker cp "alpine-builder:/build-bins/." "${SBUILD_TMPDIR}/"
     [ -s "${SBUILD_TMPDIR}/LICENSE" ] && cp -fv "${SBUILD_TMPDIR}/LICENSE" "${SBUILD_OUTDIR}/LICENSE"
     find "${SBUILD_TMPDIR}" -maxdepth 1 -type f -exec file -i "{}" \; | grep -Ei "application/.*executable|inode/symlink|text/x-perl|text/.*script" | cut -d":" -f1 | xargs realpath --no-symlinks | xargs -I "{}" rsync -achvL "{}" "${SBUILD_OUTDIR}"